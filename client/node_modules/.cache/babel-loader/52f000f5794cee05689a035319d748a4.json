{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/muham/OneDrive/Documents/UMG/GigaNode Course/nasa-project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\muham\\\\OneDrive\\\\Documents\\\\UMG\\\\GigaNode Course\\\\nasa-project\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";// Load planets and return as JSON.\nfunction httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}// Load launches, sort by flight number, and return as JSON.\nfunction _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,planets;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://localhost:4000/planets\");case 2:response=_context.sent;_context.next=5;return response.json();case 5:planets=_context.sent;return _context.abrupt(\"return\",planets);case 7:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}// Submit given launch data to launch system.\nfunction _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,launches;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"http://localhost:4000/launches\");case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:launches=_context2.sent;return _context2.abrupt(\"return\",launches.sort(function(a,b){return a.flightNumber-b.flightNumber;}));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}// Delete launch with given ID.\nfunction _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"http://localhost:4000/launches\",{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(launch)});case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"http://localhost:4000/launches/\"+id,{method:\"delete\"});case 3:return _context4.abrupt(\"return\",_context4.sent);case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);return _context4.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context4.stop();}}},_callee4,null,[[0,6]]);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"sources":["C:/Users/muham/OneDrive/Documents/UMG/GigaNode Course/nasa-project/client/src/hooks/requests.js"],"names":["httpGetPlanets","fetch","response","json","planets","httpGetLaunches","launches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","ok","httpAbortLaunch","id"],"mappings":"8UAAA;QACeA,CAAAA,c,iDAMf;mGANA,8KACyBC,CAAAA,KAAK,CAAC,+BAAD,CAD9B,QACQC,QADR,qCAEwBA,CAAAA,QAAQ,CAACC,IAAT,EAFxB,QAEQC,OAFR,+CAGSA,OAHT,wD,yDAOeC,CAAAA,e,kDAMf;qGANA,qLACyBJ,CAAAA,KAAK,CAAC,gCAAD,CAD9B,QACQC,QADR,uCAEyBA,CAAAA,QAAQ,CAACC,IAAT,EAFzB,QAEQG,QAFR,iDAGSA,QAAQ,CAACC,IAAT,CAAc,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACE,YAAF,CAAiBD,CAAC,CAACC,YAA7B,EAAd,CAHT,0D,0DAOeC,CAAAA,gB,qDAcf;uGAdA,kBAAgCC,MAAhC,8JAEiBX,CAAAA,KAAK,CAAC,gCAAD,CAAmC,CACnDY,MAAM,CAAE,MAD2C,CAEnDC,OAAO,CAAE,CACP,eAAgB,kBADT,CAF0C,CAKnDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAL6C,CAAnC,CAFtB,qJAUW,CAACM,EAAE,CAAE,KAAL,CAVX,uE,2DAeeC,CAAAA,e,0JAAf,kBAA+BC,EAA/B,8JAEiBnB,CAAAA,KAAK,CAAC,kCAAoCmB,EAArC,CAAyC,CACzDP,MAAM,CAAE,QADiD,CAAzC,CAFtB,qJAMW,CAACK,EAAE,CAAE,KAAL,CANX,uE,kDAUA,OAAQlB,cAAR,CAAwBK,eAAxB,CAAyCM,gBAAzC,CAA2DQ,eAA3D","sourcesContent":["// Load planets and return as JSON.\nasync function httpGetPlanets() {\n  const response = await fetch(\"http://localhost:4000/planets\")\n  const planets = await response.json()\n  return planets\n}\n\n// Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches() {\n  const response = await fetch(\"http://localhost:4000/launches\")\n  const launches = await response.json()\n  return launches.sort((a, b) => a.flightNumber - b.flightNumber)\n}\n\n// Submit given launch data to launch system.\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(\"http://localhost:4000/launches\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(launch),\n    })\n  } catch (error) {\n    return {ok: false}\n  }\n}\n\n// Delete launch with given ID.\nasync function httpAbortLaunch(id) {\n  try {\n    return await fetch(\"http://localhost:4000/launches/\" + id, {\n      method: \"delete\",\n    })\n  } catch (error) {\n    return {ok: false}\n  }\n}\n\nexport {httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch}\n"]},"metadata":{},"sourceType":"module"}