{"ast":null,"code":"// Load planets and return as JSON.\nasync function httpGetPlanets() {\n  const response = await fetch(\"http://localhost:4000/planets\");\n  const planets = await response.json();\n  return planets;\n} // Load launches, sort by flight number, and return as JSON.\n\n\nasync function httpGetLaunches() {\n  const response = await fetch(\"http://localhost:4000/launches\");\n  const launches = await response.json();\n  return launches.sort((a, b) => a.flightNumber - b.flightNumber);\n} // Submit given launch data to launch system.\n\n\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(\"http://localhost:4000/launches\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(launch)\n    });\n  } catch (error) {\n    return {\n      ok: false\n    };\n  }\n} // Delete launch with given ID.\n\n\nasync function httpAbortLaunch(id) {\n  try {\n    return await fetch(\"http://localhost:4000/launches/\" + id, {\n      method: \"delete\"\n    });\n  } catch (error) {\n    return {\n      ok: false\n    };\n  }\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["C:/Users/muham/OneDrive/Documents/UMG/GigaNode Course/nasa-project/client/src/hooks/requests.js"],"names":["httpGetPlanets","response","fetch","planets","json","httpGetLaunches","launches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","error","ok","httpAbortLaunch","id"],"mappings":"AAAA;AACA,eAAeA,cAAf,GAAgC;AAC9B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAA5B;AACA,QAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACA,SAAOD,OAAP;AACD,C,CAED;;;AACA,eAAeE,eAAf,GAAiC;AAC/B,QAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAA5B;AACA,QAAMI,QAAQ,GAAG,MAAML,QAAQ,CAACG,IAAT,EAAvB;AACA,SAAOE,QAAQ,CAACC,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAA3C,CAAP;AACD,C,CAED;;;AACA,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC;AACtC,MAAI;AACF,WAAO,MAAMV,KAAK,CAAC,gCAAD,EAAmC;AACnDW,MAAAA,MAAM,EAAE,MAD2C;AAEnDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF0C;AAKnDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AAL6C,KAAnC,CAAlB;AAOD,GARD,CAQE,OAAOM,KAAP,EAAc;AACd,WAAO;AAACC,MAAAA,EAAE,EAAE;AAAL,KAAP;AACD;AACF,C,CAED;;;AACA,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC;AACjC,MAAI;AACF,WAAO,MAAMnB,KAAK,CAAC,oCAAoCmB,EAArC,EAAyC;AACzDR,MAAAA,MAAM,EAAE;AADiD,KAAzC,CAAlB;AAGD,GAJD,CAIE,OAAOK,KAAP,EAAc;AACd,WAAO;AAACC,MAAAA,EAAE,EAAE;AAAL,KAAP;AACD;AACF;;AAED,SAAQnB,cAAR,EAAwBK,eAAxB,EAAyCM,gBAAzC,EAA2DS,eAA3D","sourcesContent":["// Load planets and return as JSON.\nasync function httpGetPlanets() {\n  const response = await fetch(\"http://localhost:4000/planets\")\n  const planets = await response.json()\n  return planets\n}\n\n// Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches() {\n  const response = await fetch(\"http://localhost:4000/launches\")\n  const launches = await response.json()\n  return launches.sort((a, b) => a.flightNumber - b.flightNumber)\n}\n\n// Submit given launch data to launch system.\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(\"http://localhost:4000/launches\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(launch),\n    })\n  } catch (error) {\n    return {ok: false}\n  }\n}\n\n// Delete launch with given ID.\nasync function httpAbortLaunch(id) {\n  try {\n    return await fetch(\"http://localhost:4000/launches/\" + id, {\n      method: \"delete\",\n    })\n  } catch (error) {\n    return {ok: false}\n  }\n}\n\nexport {httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch}\n"]},"metadata":{},"sourceType":"module"}